// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: battlelog.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BattleLogUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName    string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	PilotName   string `protobuf:"bytes,3,opt,name=pilot_name,json=pilotName,proto3" json:"pilot_name,omitempty"`
	GameParam   []byte `protobuf:"bytes,4,opt,name=game_param,json=gameParam,proto3" json:"game_param,omitempty"`
	BattleCount int32  `protobuf:"varint,5,opt,name=battle_count,json=battleCount,proto3" json:"battle_count,omitempty"`
	WinCount    int32  `protobuf:"varint,6,opt,name=win_count,json=winCount,proto3" json:"win_count,omitempty"`
	LoseCount   int32  `protobuf:"varint,7,opt,name=lose_count,json=loseCount,proto3" json:"lose_count,omitempty"`
	Platform    string `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
}

func (x *BattleLogUser) Reset() {
	*x = BattleLogUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battlelog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleLogUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleLogUser) ProtoMessage() {}

func (x *BattleLogUser) ProtoReflect() protoreflect.Message {
	mi := &file_battlelog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleLogUser.ProtoReflect.Descriptor instead.
func (*BattleLogUser) Descriptor() ([]byte, []int) {
	return file_battlelog_proto_rawDescGZIP(), []int{0}
}

func (x *BattleLogUser) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BattleLogUser) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *BattleLogUser) GetPilotName() string {
	if x != nil {
		return x.PilotName
	}
	return ""
}

func (x *BattleLogUser) GetGameParam() []byte {
	if x != nil {
		return x.GameParam
	}
	return nil
}

func (x *BattleLogUser) GetBattleCount() int32 {
	if x != nil {
		return x.BattleCount
	}
	return 0
}

func (x *BattleLogUser) GetWinCount() int32 {
	if x != nil {
		return x.WinCount
	}
	return 0
}

func (x *BattleLogUser) GetLoseCount() int32 {
	if x != nil {
		return x.LoseCount
	}
	return 0
}

func (x *BattleLogUser) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type BattleLogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Body      []byte `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Seq       uint32 `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	Timestamp int64  `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *BattleLogMessage) Reset() {
	*x = BattleLogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battlelog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleLogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleLogMessage) ProtoMessage() {}

func (x *BattleLogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_battlelog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleLogMessage.ProtoReflect.Descriptor instead.
func (*BattleLogMessage) Descriptor() ([]byte, []int) {
	return file_battlelog_proto_rawDescGZIP(), []int{1}
}

func (x *BattleLogMessage) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BattleLogMessage) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *BattleLogMessage) GetSeq() uint32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *BattleLogMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type BattleLogFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GameDisk       string              `protobuf:"bytes,5,opt,name=game_disk,json=gameDisk,proto3" json:"game_disk,omitempty"`
	GdxsvVersion   string              `protobuf:"bytes,2,opt,name=gdxsv_version,json=gdxsvVersion,proto3" json:"gdxsv_version,omitempty"`
	BattleCode     string              `protobuf:"bytes,3,opt,name=battle_code,json=battleCode,proto3" json:"battle_code,omitempty"`
	LogFileVersion int32               `protobuf:"varint,4,opt,name=log_file_version,json=logFileVersion,proto3" json:"log_file_version,omitempty"`
	RuleBin        []byte              `protobuf:"bytes,10,opt,name=rule_bin,json=ruleBin,proto3" json:"rule_bin,omitempty"`
	Users          []*BattleLogUser    `protobuf:"bytes,11,rep,name=users,proto3" json:"users,omitempty"`
	BattleData     []*BattleLogMessage `protobuf:"bytes,12,rep,name=battle_data,json=battleData,proto3" json:"battle_data,omitempty"`
	StartAt        int64               `protobuf:"varint,20,opt,name=start_at,json=startAt,proto3" json:"start_at,omitempty"`
	EndAt          int64               `protobuf:"varint,21,opt,name=end_at,json=endAt,proto3" json:"end_at,omitempty"`
}

func (x *BattleLogFile) Reset() {
	*x = BattleLogFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battlelog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleLogFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleLogFile) ProtoMessage() {}

func (x *BattleLogFile) ProtoReflect() protoreflect.Message {
	mi := &file_battlelog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleLogFile.ProtoReflect.Descriptor instead.
func (*BattleLogFile) Descriptor() ([]byte, []int) {
	return file_battlelog_proto_rawDescGZIP(), []int{2}
}

func (x *BattleLogFile) GetGameDisk() string {
	if x != nil {
		return x.GameDisk
	}
	return ""
}

func (x *BattleLogFile) GetGdxsvVersion() string {
	if x != nil {
		return x.GdxsvVersion
	}
	return ""
}

func (x *BattleLogFile) GetBattleCode() string {
	if x != nil {
		return x.BattleCode
	}
	return ""
}

func (x *BattleLogFile) GetLogFileVersion() int32 {
	if x != nil {
		return x.LogFileVersion
	}
	return 0
}

func (x *BattleLogFile) GetRuleBin() []byte {
	if x != nil {
		return x.RuleBin
	}
	return nil
}

func (x *BattleLogFile) GetUsers() []*BattleLogUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *BattleLogFile) GetBattleData() []*BattleLogMessage {
	if x != nil {
		return x.BattleData
	}
	return nil
}

func (x *BattleLogFile) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *BattleLogFile) GetEndAt() int64 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

var File_battlelog_proto protoreflect.FileDescriptor

var file_battlelog_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x69, 0x6c, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x6f, 0x0a, 0x10, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xcf, 0x02, 0x0a, 0x0d, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x67, 0x61, 0x6d, 0x65, 0x44, 0x69, 0x73, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x64, 0x78,
	0x73, 0x76, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x67, 0x64, 0x78, 0x73, 0x76, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x6c, 0x6f, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x75, 0x6c,
	0x65, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x75, 0x6c,
	0x65, 0x42, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x12, 0x38, 0x0a, 0x0b, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0a,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x6e, 0x64, 0x41, 0x74, 0x42, 0x26, 0x5a, 0x24,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x61, 0x64, 0x61,
	0x2d, 0x73, 0x2f, 0x67, 0x64, 0x78, 0x73, 0x76, 0x2f, 0x67, 0x64, 0x78, 0x73, 0x76, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_battlelog_proto_rawDescOnce sync.Once
	file_battlelog_proto_rawDescData = file_battlelog_proto_rawDesc
)

func file_battlelog_proto_rawDescGZIP() []byte {
	file_battlelog_proto_rawDescOnce.Do(func() {
		file_battlelog_proto_rawDescData = protoimpl.X.CompressGZIP(file_battlelog_proto_rawDescData)
	})
	return file_battlelog_proto_rawDescData
}

var file_battlelog_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_battlelog_proto_goTypes = []interface{}{
	(*BattleLogUser)(nil),    // 0: proto.BattleLogUser
	(*BattleLogMessage)(nil), // 1: proto.BattleLogMessage
	(*BattleLogFile)(nil),    // 2: proto.BattleLogFile
}
var file_battlelog_proto_depIdxs = []int32{
	0, // 0: proto.BattleLogFile.users:type_name -> proto.BattleLogUser
	1, // 1: proto.BattleLogFile.battle_data:type_name -> proto.BattleLogMessage
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_battlelog_proto_init() }
func file_battlelog_proto_init() {
	if File_battlelog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_battlelog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleLogUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battlelog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleLogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battlelog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleLogFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battlelog_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_battlelog_proto_goTypes,
		DependencyIndexes: file_battlelog_proto_depIdxs,
		MessageInfos:      file_battlelog_proto_msgTypes,
	}.Build()
	File_battlelog_proto = out.File
	file_battlelog_proto_rawDesc = nil
	file_battlelog_proto_goTypes = nil
	file_battlelog_proto_depIdxs = nil
}
