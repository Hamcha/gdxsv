{"version":3,"sources":["game.jpg","flycast.png","world.jpg","stick.jpg","headset.jpg","renpo.png","zeon.png","renji1.png","renji2.png","Const.tsx","Header.tsx","Home.tsx","Status.tsx","Footer.tsx","gtag.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","DiscordUrl","GuideJaUrl","Header","Navbar","id","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Link","Button","target","variant","Home","Container","Row","Col","sm","Image","src","image01","thumbnail","image02","image03","image04","image05","Jumbotron","fluid","Status","props","state","interval","lobby_users","battle_users","active_games","axios","get","resp","data","compByUserId","a","b","user_id","sort","this","setState","self","setInterval","updateLbsStatus","console","log","clearInterval","dc1_lobby_users","filter","u","disk","dc1_battle_users","dc2_lobby_users","dc2_battle_users","renderOnlineUser","key","name","team","renpoIcon","style","backgroundColor","height","width","roundedCircle","zeonIcon","renderOnlineUserTable","users","Table","striped","bordered","hover","size","map","disk2Icon","rounded","length","disk1Icon","React","Component","Footer","data-url","data-size","data-text","data-hashtags","data-show-count","data-href","data-layout","rel","pageview","url","window","gtag","page_path","App","Fragment","basename","process","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3223968.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/game.fff3aa67.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flycast.7fcf2fb8.png\";","module.exports = __webpack_public_path__ + \"static/media/world.06a46146.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stick.f7923533.jpg\";","module.exports = __webpack_public_path__ + \"static/media/headset.d5ffaa20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/renpo.a3cb3e29.png\";","module.exports = __webpack_public_path__ + \"static/media/zeon.9fd884d4.png\";","module.exports = __webpack_public_path__ + \"static/media/renji1.1f47b31c.png\";","module.exports = __webpack_public_path__ + \"static/media/renji2.9c6b5d3f.png\";","// @ts-ignore\r\nexport const WebsiteUrl = \"https://gdxsv.net\";\r\nexport const DiscordUrl = \"https://discord.gg/ktRw4JX\";\r\nexport const GuideJaUrl = \"https://gdoc.pub/doc/1o0ab6vRduUVefKC4GE7r2zhNfNomVKL8DdDQtx_ZBbA#?usp=sharing\";\r\n","import {GuideJaUrl, DiscordUrl} from './Const'\r\nimport React from 'react';\r\nimport {\r\n    Button,\r\n    Nav,\r\n    Navbar,\r\n} from 'react-bootstrap';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <Navbar id=\"page-header\" expand=\"sm\">\r\n            <Navbar.Brand id=\"page-header-brand\" href=\"#/\">gdxsv</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"ml-auto\">\r\n                    <Nav.Link href=\"#/status\">接続情報</Nav.Link>\r\n                </Nav>\r\n                <Button target=\"_blank\" href={GuideJaUrl} variant={\"outline-secondary\"}\r\n                        className={\"join-btn mx-2 px-4 py-2\"}>接続ガイド</Button>\r\n                <Button target=\"_blank\" href={DiscordUrl} variant={\"outline-primary\"}\r\n                        className={\"join-btn mx-2 px-4 py-2\"}><i className=\"fab fa-discord\"></i>参加する</Button>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n","import {GuideJaUrl, DiscordUrl} from './Const'\r\nimport React from 'react';\r\nimport image01 from './game.jpg';\r\nimport image02 from './flycast.png';\r\nimport image03 from './world.jpg';\r\nimport image04 from './stick.jpg';\r\nimport image05 from './headset.jpg';\r\n\r\nimport {\r\n    Button,\r\n    Col,\r\n    Container,\r\n    Jumbotron,\r\n    Row,\r\n    Image,\r\n} from 'react-bootstrap';\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"Title title-bg image d-flex\">\r\n                <h1>gdxsv</h1>\r\n                <Button target=\"_blank\" href={DiscordUrl} variant={\"outline-primary\"}\r\n                        className={\"join-btn mx-3 my-3 px-5 py-3\"}>参加する</Button>\r\n            </div>\r\n\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <h2>今、連ジの通信対戦が蘇る！</h2>\r\n                        <p>gdxsvは2001年に発売された「機動戦士ガンダム連邦vs.ジオンDX」の通信対戦を復活させるプロジェクトです。</p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className={\"img-text my-5 align-items-center\"}>\r\n                    <Col sm={6}>\r\n                        <Image src={image01} thumbnail={true}></Image>\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <h3>ドリキャス版</h3>\r\n                        <p>\r\n                            DC版を戦場に選びました。<br/>\r\n                            DC版はアーケード版から多少修正が加えられていますが、アーケードプレイヤーにとっても大きな違和感なく楽しめるでしょう。\r\n                        </p>\r\n                        <p className={\"gray-text\"}>\r\n                            『機動戦士ガンダム 連邦vs.ジオン & DX』<br/>\r\n                            ©創通エージェンシー・サンライズ ©BANDAI 2001<br/>\r\n                            ©CAPCOM CO.,LTD. 2001 ALL RIGHTS RESERVED\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className={\"img-text my-5 align-items-center\"}>\r\n                    <Col sm={6}>\r\n                        <Image src={image02} thumbnail={true}></Image>\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <h3>Powered by flycast</h3>\r\n                        <p>\r\n                            ドリームキャスト版の連ジを動かすのは、DCエミュレーター <a\r\n                            href={\"https://github.com/flyinghead/flycast\"}>flycast</a> です。<br/>\r\n                            gdxsvではエミュレーター内部に手を加えて通信遅延を最小化しました。\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className={\"img-text my-5 align-items-center\"}>\r\n                    <Col sm={6}>\r\n                        <Image src={image03} thumbnail={true}></Image>\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <h3>世界中にサーバーを用意しました</h3>\r\n                        <p>\r\n                            クラウドを活用して、対戦サーバーを世界中に用意しました。<br/>\r\n                            地域固定のロビーもあれば、対戦相手と一番相性のよい対戦サーバーを自動的に検索して接続することもできます。\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className={\"img-text my-5 align-items-center\"}>\r\n                    <Col sm={6}>\r\n                        <Image src={image04} thumbnail={true}></Image>\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <h3>無料です</h3>\r\n                        <p>\r\n                            gdxsvはボランティアによって開発・運営されています。<br/>\r\n                            対戦中1分13円の課金は発生しません。<br/>\r\n                            ゲームソフトやPC・周辺機器は各自で準備する必要があります。\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row className={\"img-text my-5 align-items-center\"}>\r\n                    <Col sm={6}>\r\n                        <Image src={image05} thumbnail={true}></Image>\r\n                    </Col>\r\n                    <Col sm={6}>\r\n                        <h3>ボイスチャットで時間を共有しよう</h3>\r\n                        <p>\r\n                            無料アプリ Discord のサーバーを用意しました。<br/>\r\n                            テキストチャットで対戦相手の募集したり、ボイスチャットで味方や対戦相手と通話しながら遊べます。スマートフォンでも通話に参加できます。\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Jumbotron fluid>\r\n                    <Container>\r\n                        <h2>作 戦 開 始</h2>\r\n                        <div className={\"d-flex justify-content-center\"}>\r\n                            <Button target=\"_blank\" href={GuideJaUrl} variant={\"outline-secondary\"}\r\n                                    className={\"secondary join-btn mx-2 my-3 px-3 py-3\"}>接続ガイド</Button>\r\n                            <Button target=\"_blank\" href={DiscordUrl} variant={\"outline-primary\"}\r\n                                    className={\"join-btn mx-2 my-3 px-4 py-3\"}>参加する</Button>\r\n                        </div>\r\n                    </Container>\r\n                </Jumbotron>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport renpoIcon from './renpo.png'\r\nimport zeonIcon from './zeon.png'\r\nimport disk1Icon from './renji1.png'\r\nimport disk2Icon from './renji2.png'\r\n\r\nimport {\r\n    Image,\r\n    Container,\r\n    Table,\r\n} from 'react-bootstrap';\r\n\r\ntype OnlineUser = {\r\n    user_id: string\r\n    name: string\r\n    team: string\r\n    battleCode: string\r\n    disk: string\r\n}\r\n\r\ntype ActiveGame = {\r\n    battle_code: string\r\n    region: string\r\n    disk: string\r\n    state: string\r\n    updated_at: Date\r\n}\r\n\r\ntype Props = {}\r\n\r\ntype State = {\r\n    interval: any\r\n    lobby_users: OnlineUser[]\r\n    battle_users: OnlineUser[]\r\n    active_games: ActiveGame[]\r\n}\r\n\r\nexport default class Status extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            interval: null,\r\n            lobby_users: [],\r\n            battle_users: [],\r\n            active_games: [],\r\n        }\r\n    }\r\n\r\n    async updateLbsStatus() {\r\n        const resp = await axios.get(\"https://asia-northeast1-gdxsv-274515.cloudfunctions.net/lbsapi/status\")\r\n        const lobby_users = resp.data.lobby_users || []\r\n        const battle_users = resp.data.battle_users || []\r\n        const active_games = resp.data.active_games || []\r\n        const compByUserId = (a: OnlineUser, b: OnlineUser) => {\r\n            if (a.user_id < b.user_id) return -1;\r\n            if (a.user_id > b.user_id) return 1;\r\n            return 0;\r\n        };\r\n        lobby_users.sort(compByUserId);\r\n        battle_users.sort(compByUserId);\r\n        this.setState({\r\n            lobby_users,\r\n            battle_users,\r\n            active_games,\r\n        });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const self = this;\r\n        const interval = setInterval(async function () {\r\n            await self.updateLbsStatus();\r\n        }, 1000 * 30);\r\n        this.setState({interval})\r\n        await this.updateLbsStatus();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"clear interval\");\r\n        clearInterval(this.state.interval);\r\n    }\r\n\r\n    render() {\r\n        const dc1_lobby_users = this.state.lobby_users.filter((u: OnlineUser) => u.disk === \"dc1\");\r\n        const dc1_battle_users = this.state.battle_users.filter((u: OnlineUser) => u.disk === \"dc1\");\r\n        const dc2_lobby_users = this.state.lobby_users.filter((u: OnlineUser) => u.disk === \"dc2\");\r\n        const dc2_battle_users = this.state.battle_users.filter((u: OnlineUser) => u.disk === \"dc2\");\r\n\r\n        const renderOnlineUser = (u: OnlineUser) =>\r\n            <tr key={u.user_id}>\r\n                <td>{u.user_id}</td>\r\n                <td>{u.name}</td>\r\n                <td className={\"text-center\"}>\r\n                    {u.team === \"renpo\" && (\r\n                        <Image\r\n                            src={renpoIcon}\r\n                            style={{backgroundColor: \"CornflowerBlue\"}}\r\n                            height=\"26\" width=\"26\"\r\n                            roundedCircle/>\r\n                    )}\r\n                    {u.team === \"zeon\" && (\r\n                        <Image\r\n                            src={zeonIcon}\r\n                            style={{backgroundColor: \"mediumvioletred\"}}\r\n                            height=\"26\" width=\"26\"\r\n                            roundedCircle/>\r\n                    )}\r\n                </td>\r\n            </tr>\r\n\r\n        const renderOnlineUserTable = (users: OnlineUser[]) =>\r\n            <Table striped bordered hover size=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>UserID</th>\r\n                    <th>Name</th>\r\n                    <th>Team</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {this.state.lobby_users.filter((u: OnlineUser) => u.disk === \"dc2\").map(renderOnlineUser)}\r\n                </tbody>\r\n            </Table>\r\n\r\n        return (\r\n            <Container>\r\n                <Container>\r\n                    <div className={\"text-center mt-3\"}>\r\n                        <Image\r\n                            src={disk2Icon}\r\n                            style={{backgroundColor: \"black\"}}\r\n                            height=\"60\"\r\n                            rounded\r\n                        />\r\n                    </div>\r\n                    <h3>Lobby {dc2_lobby_users.length} 人</h3>\r\n                    {renderOnlineUserTable(dc2_lobby_users)}\r\n                    <h3>Battle {dc2_battle_users.length} 人</h3>\r\n                    {renderOnlineUserTable(dc2_battle_users)}\r\n                </Container>\r\n\r\n                <Container>\r\n                    <div className={\"text-center mt-5\"}>\r\n                        <Image\r\n                            src={disk1Icon}\r\n                            style={{backgroundColor: \"black\"}}\r\n                            height=\"60\"\r\n                            rounded\r\n                        />\r\n                    </div>\r\n                    <h3>Lobby {dc1_lobby_users.length} 人</h3>\r\n                    {renderOnlineUserTable(dc1_lobby_users)}\r\n                    <h3>Battle {dc1_battle_users.length} 人</h3>\r\n                    {renderOnlineUserTable(dc1_battle_users)}\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {WebsiteUrl} from './Const';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <footer>\r\n            <div className={\"d-flex justify-content-center my-5\"}>\r\n                <a href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\r\n                   data-url={WebsiteUrl}\r\n                   className=\"twitter-share-button mx-2\"\r\n                   data-size=\"large\"\r\n                   data-text=\"連ジDX通信対戦\"\r\n                   data-hashtags=\"gdxsv\"\r\n                   data-show-count=\"false\">Tweet</a>\r\n                <div className=\"fb-share-button mx-2\"\r\n                     data-href={WebsiteUrl}\r\n                     data-layout=\"button\"\r\n                     data-size=\"large\">\r\n                    <a target=\"_blank\"\r\n                       rel=\"noopener noreferrer\"\r\n                       href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Finada-s.github.io%2Fgdxsv%2F&amp;src=sdkpreparse\"\r\n                       className=\"fb-xfbml-parse-ignore\">Share</a>\r\n                </div>\r\n            </div>\r\n\r\n            <p>© gdxsv project 2020 </p>\r\n        </footer>\r\n    );\r\n}\r\n","export const GA_MEASUREMENT_ID = 'G-FJN2KR1FWT';\r\n\r\nexport const pageview = (url: URL | string) => {\r\n    window.gtag(\"config\", GA_MEASUREMENT_ID, {\r\n        page_path: url\r\n    });\r\n};\r\n\r\ntype GTagEvent = {\r\n    action: string;\r\n    category: string;\r\n    label: string;\r\n    value: number;\r\n};\r\n\r\nexport const event = ({action, category, label, value}: GTagEvent) => {\r\n    window.gtag(\"event\", action, {\r\n        event_category: category,\r\n        event_label: label,\r\n        value: value\r\n    });\r\n};","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Status from './Status';\nimport Footer from './Footer';\nimport {pageview} from './gtag'\n\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Header/>\n            <Router basename={process.env.PUBLIC_URL}>\n                <div>\n                    <Switch>\n                        <Route exact path=\"/\">\n                            {pageview('/')}\n                            <Home/>\n                        </Route>\n                        <Route path=\"/status\">\n                            {pageview('/status')}\n                            <Status/>\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n            <Footer/>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}