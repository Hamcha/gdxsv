{"version":3,"sources":["Locale.tsx","Const.tsx","Header.tsx","game.jpg","flycast.png","world.jpg","stick.jpg","headset.jpg","Home.tsx","renpo.png","zeon.png","renji1.png","renji2.png","Status.tsx","ShareButtons.tsx","Footer.tsx","gtag.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["browserLanguage","navigator","languages","language","WebsiteUrl","DiscordUrl","GuideJaUrl","Header","locale","setLocale","localeList","intl","useIntl","Navbar","id","expand","Brand","href","formatMessage","Toggle","aria-controls","Collapse","Nav","className","Link","Button","target","variant","NavDropdown","style","fontSize","title","find","i","code","name","map","Item","onClick","Home","Container","Row","Col","br","sm","Image","src","image01","thumbnail","image02","flycastGithub","image03","image04","image05","Jumbotron","fluid","Status","props","state","interval","lobby_users","battle_users","active_games","a","axios","get","resp","data","compByUserId","b","user_id","sort","this","setState","self","setInterval","updateLbsStatus","console","log","clearInterval","dc1_lobby_users","filter","u","disk","dc1_battle_users","dc2_lobby_users","dc2_battle_users","renderOnlineUser","team","renpoIcon","backgroundColor","height","width","roundedCircle","zeonIcon","renderOnlineUserTable","users","Table","striped","bordered","hover","size","disk2Icon","rounded","values","peopleCount","length","disk1Icon","React","Component","ariaLabel","children","aria-label","rel","margin","TwitterButton","text","url","escape","hashTags","join","xmlns","viewBox","d","FacebookButton","MeweButton","encodeURI","cx","cy","r","fill","clip-path","xlinkHref","LineButton","stroke","stroke-width","stroke-dasharray","stroke-dashoffset","fill-rule","fill-opacity","Footer","pageview","window","gtag","page_path","App","defaultLocale","localStorage","toLowerCase","split","useState","item","includes","selectedLocale","setItem","ja","zh","en","useLocale","localeMessage","messages","Fragment","basename","process","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.861f0374.chunk.js","sourcesContent":["import { useState } from 'react';\nimport ja from './translations/ja.json';\nimport zh from './translations/zh.json';\nimport en from './translations/en.json';\n\nconst browserLanguage:string = (navigator.languages && navigator.languages[0]) || navigator.language;\n\nexport type LocaleType = \"ja\" | \"zh\" | \"en\";\nexport interface ILocaleItem {\n    name: string;\n    code: LocaleType;\n}\n\n// seems typescript bug here, use any for now\n// export default ():[string, React.Dispatch<React.SetStateAction<LocaleType>>, ILocaleItem[], any] => {\nexport default ():any[] => {\n    const defaultLocale:LocaleType =\n        localStorage['locale'] ||\n        (browserLanguage && browserLanguage.toLowerCase().split(/[_-]+/)[0]) || // Remove the region code\n        'ja';\n    \n    const localeList:ILocaleItem[] = [\n        { name: '日本語', code: 'ja' },\n        { name: '中文', code: 'zh' },\n        { name: 'English', code: 'en' }\n    ];\n    const [locale, setLocale] = useState(\n        localeList.map(item => item.code).includes(defaultLocale) ?\n        defaultLocale :\n        'ja'\n    );\n    const messages = { ja: ja, zh: zh, en: en };\n\n    const changeLocale = (selectedLocale: LocaleType) => {\n        setLocale(selectedLocale);\n        localStorage.setItem('locale',selectedLocale)\n    }\n    \n    return [locale, changeLocale, localeList, messages[locale]];\n};\n","// @ts-ignore\nexport const WebsiteUrl = \"https://gdxsv.net\";\nexport const DiscordUrl = \"https://discord.gg/ktRw4JX\";\nexport const GuideJaUrl = \"https://gdoc.pub/doc/1o0ab6vRduUVefKC4GE7r2zhNfNomVKL8DdDQtx_ZBbA#?usp=sharing\";\nexport const GuideEnUrl = \"https://gdoc.pub/doc/1-wApGwlOh5sPLatshEp-xgzc5Q50w8j61LswsBdWZDM#?usp=sharing\";\n","import {GuideEnUrl, GuideJaUrl, DiscordUrl} from './Const'\nimport React from 'react';\nimport {\n    Button,\n    Nav,\n    Navbar,\n    NavDropdown\n} from 'react-bootstrap';\nimport {useIntl} from 'react-intl';\nimport {LocaleType, ILocaleItem} from './Locale';\n\ninterface IHeader {\n    locale: LocaleType;\n    setLocale: React.Dispatch<React.SetStateAction<LocaleType>>;\n    localeList: ILocaleItem[];\n}\n\nexport default function Header({locale, setLocale, localeList}: IHeader) {\n    const intl = useIntl();\n    return (\n        <Navbar id=\"page-header\" expand=\"md\">\n            <Navbar.Brand id=\"page-header-brand\" href=\"#/\">{intl.formatMessage({id: \"common.title\"})}</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Link href=\"#/status\">{intl.formatMessage({id: \"header.status\"})}</Nav.Link>\n                </Nav>\n                <Button target=\"_blank\" href={locale === 'ja' ? GuideJaUrl : GuideEnUrl} variant={\"outline-secondary\"}\n                        className={\"join-btn mx-2 px-4 py-2\"}>{intl.formatMessage({id: \"common.connection-guide\"})}</Button>\n                <Button target=\"_blank\" href={DiscordUrl} variant={\"outline-primary\"}\n                        className={\"join-btn mx-2 px-4 py-2\"}><i\n                    className=\"fab fa-discord\"></i>{intl.formatMessage({id: \"common.join\"})}</Button>\n                <NavDropdown style={{fontSize: '1rem'}} title={(localeList.find(i => i.code === locale) || {}).name}\n                             id=\"language-nav-dropdown\">\n                    {\n                        localeList.map(({name, code}) => (\n                            <NavDropdown.Item key={code} onClick={() => setLocale(code)}>{name}</NavDropdown.Item>\n                        ))\n                    }\n                </NavDropdown>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/game.968bae36.jpg\";","export default __webpack_public_path__ + \"static/media/flycast.e8b8397e.png\";","export default __webpack_public_path__ + \"static/media/world.adda8bad.jpg\";","export default __webpack_public_path__ + \"static/media/stick.7bf4a263.jpg\";","export default __webpack_public_path__ + \"static/media/headset.8d057244.jpg\";","import {GuideJaUrl, DiscordUrl} from './Const'\nimport React from 'react';\nimport { useIntl } from 'react-intl';\n\nimport image01 from './game.jpg';\nimport image02 from './flycast.png';\nimport image03 from './world.jpg';\nimport image04 from './stick.jpg';\nimport image05 from './headset.jpg';\n\nimport {\n    Button,\n    Col,\n    Container,\n    Jumbotron,\n    Row,\n    Image,\n} from 'react-bootstrap';\n\nexport default function Home() {\n    const intl = useIntl();\n    return (\n        <div className=\"main\">\n            <div className=\"Title title-bg image d-flex\">\n                <h1>gdxsv</h1>\n                <Button target=\"_blank\" href={DiscordUrl} variant={\"outline-primary\"}\n                        className={\"join-btn mx-3 my-3 px-5 py-3\"}>{intl.formatMessage({ id: \"common.join\" })}</Button>\n            </div>\n\n            <Container>\n                <Row>\n                    <Col>\n                        <h2>{intl.formatMessage({ id: \"home.revive.title\" })}</h2>\n                        <p>{intl.formatMessage({ id: \"home.revive.description\"}, { br: <br /> })}</p>\n                    </Col>\n                </Row>\n\n                <Row className={\"img-text my-5 align-items-center\"}>\n                    <Col sm={6}>\n                        <Image src={image01} thumbnail={true}></Image>\n                    </Col>\n                    <Col sm={6}>\n                        <h3>{intl.formatMessage({ id: \"home.dreamcast.title\" }, { br: <br /> })}</h3>\n                        <p>{intl.formatMessage({ id: \"home.dreamcast.description\"}, { br: <br /> })}</p>\n                        <p className={\"gray-text\"}>{intl.formatMessage({ id: \"home.dreamcast.caption\"}, { br: <br /> })}</p>\n                    </Col>\n                </Row>\n\n                <Row className={\"img-text my-5 align-items-center\"}>\n                    <Col sm={6}>\n                        <Image src={image02} thumbnail={true}></Image>\n                    </Col>\n                    <Col sm={6}>\n                        <h3>{intl.formatMessage({ id: \"home.flycast.title\"}, { br: <br /> })}</h3>\n                        <p>{intl.formatMessage({\n                            id: \"home.flycast.description\"},\n                            {\n                                br: <br />,\n                                flycastGithub: <a href={\"https://github.com/flyinghead/flycast\"}>flycast</a>\n                            })\n                        }</p>\n                    </Col>\n                </Row>\n\n                <Row className={\"img-text my-5 align-items-center\"}>\n                    <Col sm={6}>\n                        <Image src={image03} thumbnail={true}></Image>\n                    </Col>\n                    <Col sm={6}>\n                        <h3>{intl.formatMessage({ id: \"home.server.title\"}, { br: <br /> })}</h3>\n                        <p>{intl.formatMessage({ id: \"home.server.description\"}, { br: <br /> })}</p>\n                    </Col>\n                </Row>\n\n                <Row className={\"img-text my-5 align-items-center\"}>\n                    <Col sm={6}>\n                        <Image src={image04} thumbnail={true}></Image>\n                    </Col>\n                    <Col sm={6}>\n                        <h3>{intl.formatMessage({ id: \"home.free.title\"}, { br: <br /> })}</h3>\n                        <p>{intl.formatMessage({ id: \"home.free.description\"}, { br: <br /> })}</p>\n                    </Col>\n                </Row>\n\n                <Row className={\"img-text my-5 align-items-center\"}>\n                    <Col sm={6}>\n                        <Image src={image05} thumbnail={true}></Image>\n                    </Col>\n                    <Col sm={6}>\n                        <h3>{intl.formatMessage({ id: \"home.voice-chat.title\"}, { br: <br /> })}</h3>\n                        <p>{intl.formatMessage({ id: \"home.voice-chat.description\"}, { br: <br /> })}</p>\n                    </Col>\n                </Row>\n\n                <Jumbotron fluid>\n                    <Container>\n                        <h2>{intl.formatMessage({ id: \"common.start-now\" })}</h2>\n                        <div className={\"d-flex justify-content-center\"}>\n                            <Button target=\"_blank\" href={GuideJaUrl} variant={\"outline-secondary\"}\n                                    className={\"secondary join-btn mx-2 my-3 px-3 py-3\"}>{intl.formatMessage({ id: \"common.connection-guide\" })}</Button>\n                            <Button target=\"_blank\" href={DiscordUrl} variant={\"outline-primary\"}\n                                    className={\"join-btn mx-2 my-3 px-4 py-3\"}>{intl.formatMessage({ id: \"common.join\" })}</Button>\n                        </div>\n                    </Container>\n                </Jumbotron>\n            </Container>\n        </div>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/renpo.19970180.png\";","export default __webpack_public_path__ + \"static/media/zeon.b43a8a0c.png\";","export default __webpack_public_path__ + \"static/media/renji1.cf4af5f6.png\";","export default __webpack_public_path__ + \"static/media/renji2.4eb628bd.png\";","import axios from 'axios';\nimport React from 'react';\nimport { FormattedMessage } from \"react-intl\";\n\nimport renpoIcon from './renpo.png'\nimport zeonIcon from './zeon.png'\nimport disk1Icon from './renji1.png'\nimport disk2Icon from './renji2.png'\n\nimport {\n    Image,\n    Container,\n    Table,\n} from 'react-bootstrap';\n\ntype OnlineUser = {\n    user_id: string\n    name: string\n    team: string\n    battleCode: string\n    disk: string\n}\n\ntype ActiveGame = {\n    battle_code: string\n    region: string\n    disk: string\n    state: string\n    updated_at: Date\n}\n\ntype Props = {}\n\ntype State = {\n    interval: any\n    lobby_users: OnlineUser[]\n    battle_users: OnlineUser[]\n    active_games: ActiveGame[]\n}\n\nexport default class Status extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            interval: null,\n            lobby_users: [],\n            battle_users: [],\n            active_games: [],\n        }\n    }\n\n    async updateLbsStatus() {\n        const resp = await axios.get(\"https://asia-northeast1-gdxsv-274515.cloudfunctions.net/lbsapi/status\")\n        const lobby_users = resp.data.lobby_users || []\n        const battle_users = resp.data.battle_users || []\n        const active_games = resp.data.active_games || []\n        const compByUserId = (a: OnlineUser, b: OnlineUser) => {\n            if (a.user_id < b.user_id) return -1;\n            if (a.user_id > b.user_id) return 1;\n            return 0;\n        };\n        lobby_users.sort(compByUserId);\n        battle_users.sort(compByUserId);\n        this.setState({\n            lobby_users,\n            battle_users,\n            active_games,\n        });\n    }\n\n    async componentDidMount() {\n        const self = this;\n        const interval = setInterval(async function () {\n            await self.updateLbsStatus();\n        }, 1000 * 30);\n        this.setState({interval})\n        await this.updateLbsStatus();\n    }\n\n    componentWillUnmount() {\n        console.log(\"clear interval\");\n        clearInterval(this.state.interval);\n    }\n\n    render() {\n        const dc1_lobby_users = this.state.lobby_users.filter((u: OnlineUser) => u.disk === \"dc1\");\n        const dc1_battle_users = this.state.battle_users.filter((u: OnlineUser) => u.disk === \"dc1\");\n        const dc2_lobby_users = this.state.lobby_users.filter((u: OnlineUser) => u.disk === \"dc2\");\n        const dc2_battle_users = this.state.battle_users.filter((u: OnlineUser) => u.disk === \"dc2\");\n\n        const renderOnlineUser = (u: OnlineUser) =>\n            <tr key={u.user_id}>\n                <td>{u.user_id}</td>\n                <td>{u.name}</td>\n                <td className={\"text-center\"}>\n                    {u.team === \"renpo\" && (\n                        <Image\n                            src={renpoIcon}\n                            style={{backgroundColor: \"CornflowerBlue\"}}\n                            height=\"26\" width=\"26\"\n                            roundedCircle/>\n                    )}\n                    {u.team === \"zeon\" && (\n                        <Image\n                            src={zeonIcon}\n                            style={{backgroundColor: \"mediumvioletred\"}}\n                            height=\"26\" width=\"26\"\n                            roundedCircle/>\n                    )}\n                </td>\n            </tr>\n\n        const renderOnlineUserTable = (users: OnlineUser[]) =>\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                <tr>\n                    <th><FormattedMessage id=\"status.user-id\" /></th>\n                    <th><FormattedMessage id=\"status.user-name\" /></th>\n                    <th><FormattedMessage id=\"status.team\" /></th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map(renderOnlineUser)}\n                </tbody>\n            </Table>\n\n        return (\n            <Container>\n                <Container>\n                    <div className={\"text-center mt-3\"}>\n                        <Image\n                            src={disk2Icon}\n                            style={{backgroundColor: \"black\"}}\n                            height=\"60\"\n                            rounded\n                        />\n                    </div>\n                    <h3><FormattedMessage id=\"status.lobby\" values={{ peopleCount: dc2_lobby_users.length }} /></h3>\n                    {renderOnlineUserTable(dc2_lobby_users)}\n                    <h3><FormattedMessage id=\"status.battle\" values={{ peopleCount: dc2_battle_users.length }} /></h3>\n                    {renderOnlineUserTable(dc2_battle_users)}\n                </Container>\n\n                <Container>\n                    <div className={\"text-center mt-5\"}>\n                        <Image\n                            src={disk1Icon}\n                            style={{backgroundColor: \"black\"}}\n                            height=\"60\"\n                            rounded\n                        />\n                    </div>\n                    <h3><FormattedMessage id=\"status.lobby\" values={{ peopleCount: dc1_lobby_users.length }} /></h3>\n                    {renderOnlineUserTable(dc1_lobby_users)}\n                    <h3><FormattedMessage id=\"status.battle\" values={{ peopleCount: dc1_battle_users.length }} /></h3>\n                    {renderOnlineUserTable(dc1_battle_users)}\n                </Container>\n            </Container>\n        );\n    }\n}\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { WebsiteUrl } from './Const';\n\ninterface ILink {\n    href: string;\n    ariaLabel: string;\n    children: React.ReactNode;\n}\n\nconst Link = ({ href, ariaLabel, children }: ILink) => (\n    <a\n        href={href}\n        target=\"_blank\"\n        aria-label={ariaLabel}\n        rel=\"noopener noreferrer nofollow\"\n        style={{ margin: '0 0.2rem' }}\n    >\n        {children}\n    </a>\n);\n\nconst TwitterButton = () => {\n    const intl = useIntl();\n    const text = intl.formatMessage({ id: \"share.data-text\" });\n    const url = escape(WebsiteUrl);\n    const hashTags = ([\n        'gdxsv',\n        '連ジ',\n        'ガンダム',\n        'Gundam',\n    ].join(','));\n    const href = `https://twitter.com/share?text=${text}&url=${url}&hashtags=${hashTags}`;\n\n    return (\n        <Link href={href} ariaLabel={intl.formatMessage({ id: \"share.twitter.label\" })}>\n            <svg style={{ width: '2rem' }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 0C5.38 0 0 5.38 0 12s5.38 12 12 12 12-5.38 12-12S18.62 0 12 0zm5.26 9.38v.34c0 3.48-2.64 7.5-7.48 7.5-1.48 0-2.87-.44-4.03-1.2 1.37.17 2.77-.2 3.9-1.08-1.16-.02-2.13-.78-2.46-1.83.38.1.8.07 1.17-.03-1.2-.24-2.1-1.3-2.1-2.58v-.05c.35.2.75.32 1.18.33-.7-.47-1.17-1.28-1.17-2.2 0-.47.13-.92.36-1.3C7.94 8.85 9.88 9.9 12.06 10c-.04-.2-.06-.4-.06-.6 0-1.46 1.18-2.63 2.63-2.63.76 0 1.44.3 1.92.82.6-.12 1.95-.27 1.95-.27-.35.53-.72 1.66-1.24 2.04z\" /></svg>\n        </Link>\n    );\n};\n\nconst FacebookButton = () => {\n    const intl = useIntl();\n    const href = `https://facebook.com/sharer/sharer.php?u=${escape(WebsiteUrl)}`;\n    return (\n        <Link href={href} ariaLabel={intl.formatMessage({ id: \"share.facebook.label\" })}>\n            <svg style={{ width: '2rem' }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 0C5.38 0 0 5.38 0 12s5.38 12 12 12 12-5.38 12-12S18.62 0 12 0zm3.6 11.5h-2.1v7h-3v-7h-2v-2h2V8.34c0-1.1.35-2.82 2.65-2.82h2.35v2.3h-1.4c-.25 0-.6.13-.6.66V9.5h2.34l-.24 2z\" /></svg>\n        </Link>\n    );\n};\n\nconst MeweButton = () => {\n    const intl = useIntl();\n    const text = encodeURI(intl.formatMessage({ id: \"share.data-text\" }));\n    const url = escape(WebsiteUrl);\n    const href = `https://mewe.com/share?link=${url}%20${text}`;\n    return (\n        <Link href={href} ariaLabel={intl.formatMessage({ id: \"share.mewe.label\" })}>\n            <svg style={{ width: '2rem' }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-3 -3 30 30\">\n                <clipPath id=\"circle\">\n                    <circle cx=\"12\" cy=\"12\" r=\"15\" />\n                </clipPath>\n                <circle cx=\"12\" cy=\"12\" r=\"15\" fill=\"black\" />\n                <path id=\"mewe\" d=\"M3.029 7.712a.768.768 0 100 1.536.768.768 0 000-1.536zm7.883 0a.768.768 0 100 1.536.768.768 0 000-1.536zm4.414 0a.768.768 0 100 1.536.768.768 0 000-1.536zm4.418 0a.768.768 0 100 1.537.768.768 0 000-1.537zm-4.447 2.307c-.27 0-.453.175-.54.428l-1.378 4.175-1.403-4.193a.546.546 0 00-.532-.392c-.296 0-.55.227-.55.523 0 .07.018.148.044.21l1.805 5.056c.105.279.296.444.558.444h.105c.261 0 .461-.165.557-.444l1.36-3.985 1.36 3.985c.096.279.288.444.55.444h.105c.261 0 .462-.174.558-.444l1.804-5.057a.617.617 0 00.052-.218.525.525 0 00-.531-.514c-.262 0-.445.166-.523.383l-1.404 4.202-1.377-4.175c-.079-.253-.27-.428-.541-.428zM.54 10.045a.538.538 0 00-.54.541v5.117c0 .297.227.523.523.523a.52.52 0 00.532-.523V12.05l1.482 2.224c.113.174.253.279.444.279.201 0 .34-.105.454-.28l1.49-2.24v3.661a.54.54 0 00.533.532.53.53 0 00.54-.532v-5.108a.538.538 0 00-.54-.54h-.114a.54.54 0 00-.488.278L3 13.227 1.15 10.333a.565.565 0 00-.497-.288zm8.368 1.439c-1.316 0-2.25 1.081-2.25 2.397v.018c0 1.42 1.03 2.389 2.363 2.389.715 0 1.239-.236 1.657-.61a.46.46 0 00.14-.323.415.415 0 00-.419-.427.391.391 0 00-.27.096 1.655 1.655 0 01-1.09.4c-.68 0-1.212-.418-1.325-1.168h2.885c.27 0 .497-.209.497-.505 0-1.064-.723-2.267-2.188-2.267zm12.904 0c-1.317 0-2.25 1.081-2.25 2.397v.018c0 1.42 1.029 2.389 2.363 2.389.715 0 1.238-.236 1.657-.61a.46.46 0 00.139-.323.415.415 0 00-.418-.427.392.392 0 00-.271.096 1.652 1.652 0 01-1.09.4c-.68 0-1.211-.418-1.325-1.168h2.886c.27 0 .497-.209.497-.505 0-1.064-.724-2.267-2.188-2.267zm-12.913.863c.698 0 1.099.532 1.169 1.212H7.705c.096-.715.549-1.212 1.194-1.212zm12.904 0c.697 0 1.098.532 1.168 1.212h-2.363c.096-.715.55-1.212 1.195-1.212z\" />\n                <use clip-path=\"url(#circle)\" xlinkHref=\"#mewe\" fill=\"white\" />\n            </svg>\n        </Link>\n    );\n};\n\nconst LineButton = () => {\n    const intl = useIntl();\n    const url = escape(WebsiteUrl);\n    const href = `line://msg/text/${url}`;\n    return (\n        <Link href={href} ariaLabel={intl.formatMessage({ id: \"share.line.label\" })}>\n            <svg style={{ width: '2rem' }} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 -6 128 128\">\n                <clipPath id=\"circle\">\n                    <circle cx=\"64\" cy=\"58\" r=\"64\" />\n                </clipPath>\n                <circle cx=\"64\" cy=\"58\" r=\"64\" fill=\"black\" />\n                <path id=\"line\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M 103.699997 70.959999 C 104.324051 70.965523 104.834427 70.464104 104.839951 69.840042 C 104.839981 69.836693 104.839996 69.833344 104.839996 69.829994 L 104.839996 65.599998 C 104.834511 64.974304 104.325714 64.469971 103.699997 64.470001 L 92.360001 64.470001 L 92.360001 60.070000 L 103.720001 60.070000 C 104.340195 60.070023 104.844513 59.570171 104.849998 58.950001 L 104.849998 54.720001 C 104.844513 54.094307 104.335716 53.589977 103.709999 53.590000 L 92.360001 53.590000 L 92.360001 49.209999 L 103.720001 49.209999 C 104.344086 49.209999 104.849998 48.704082 104.849998 48.079998 L 104.849998 43.849998 C 104.849998 43.220394 104.339600 42.709999 103.709999 42.709999 L 87.000000 42.709999 C 86.370392 42.709999 85.860001 43.220394 85.860001 43.849998 L 85.860001 69.820000 C 85.865486 70.445694 86.374283 70.950027 87.000000 70.949997 L 103.709999 70.949997 Z M 41.880001 70.959999 C 42.505722 70.960022 43.014511 70.455696 43.020000 69.830002 L 43.020000 65.599998 C 43.014511 64.974304 42.505722 64.469971 41.880001 64.470001 L 30.520000 64.470001 L 30.520000 43.860001 C 30.520000 43.230396 30.009605 42.720001 29.380001 42.720001 L 25.160000 42.720001 C 24.534304 42.725491 24.029976 43.234280 24.030001 43.860001 L 24.030001 69.830002 C 24.035431 70.451820 24.538183 70.954575 25.160000 70.959999 L 41.880001 70.959999 M 51.939999 42.730000 L 47.720001 42.730000 C 47.098183 42.735432 46.595432 43.238182 46.590000 43.860001 L 46.590000 69.830002 C 46.595432 70.451820 47.098183 70.954575 47.720001 70.959999 L 51.939999 70.959999 C 52.565720 70.960022 53.074509 70.455696 53.079998 69.830002 L 53.080002 43.860001 C 53.080002 43.230396 52.569607 42.720001 51.940002 42.720001 M 80.669998 42.730000 L 76.440002 42.730000 C 75.818184 42.735432 75.315430 43.238182 75.310005 43.860001 L 75.309998 59.279999 L 63.430000 43.240002 C 63.398373 43.198612 63.365009 43.158577 63.330002 43.120003 C 63.309639 43.090878 63.286167 43.064053 63.260002 43.040001 L 63.240002 43.020000 L 63.180000 42.980000 L 63.150002 42.950001 C 63.130768 42.935551 63.110737 42.922195 63.090000 42.910000 C 63.078320 42.897964 63.064823 42.887840 63.049999 42.880001 L 62.990002 42.860001 L 62.950001 42.840000 L 62.889999 42.799999 C 62.876759 42.802238 62.863239 42.802238 62.849998 42.799999 C 62.830002 42.779999 62.810001 42.779999 62.779999 42.770000 L 62.740002 42.759998 C 62.740002 42.750000 62.700001 42.759998 62.680000 42.740002 C 62.660000 42.720001 62.639999 42.740002 62.630001 42.740002 C 62.606850 42.735886 62.583153 42.735886 62.560001 42.740002 C 62.541187 42.730194 62.520935 42.723442 62.500000 42.720001 L 58.270000 42.720001 C 57.640396 42.720001 57.130001 43.230396 57.130001 43.860001 L 57.130001 69.830002 C 57.135490 70.455696 57.644279 70.960030 58.270000 70.959999 L 62.490002 70.959999 C 63.115723 70.960022 63.624512 70.455696 63.630001 69.830002 L 63.630001 54.400002 L 75.529999 70.459999 C 75.606644 70.577583 75.705078 70.679413 75.820000 70.760002 L 75.830002 70.760002 C 75.851761 70.778770 75.875191 70.795509 75.900002 70.810005 L 75.930000 70.809998 C 75.951637 70.820686 75.971809 70.834137 75.989998 70.849998 C 76.010002 70.849998 76.019997 70.849998 76.040001 70.870003 C 76.053200 70.872696 76.066803 70.872696 76.080002 70.870003 C 76.104523 70.887260 76.131485 70.900742 76.160004 70.910004 C 76.166473 70.912292 76.173531 70.912292 76.180000 70.910004 C 76.277779 70.936607 76.378670 70.950066 76.480003 70.950005 L 80.680000 70.949997 C 81.301819 70.944565 81.804573 70.441818 81.809998 69.820000 L 81.809998 43.860001 C 81.810020 43.234280 81.305695 42.725491 80.680000 42.720001\" stroke=\"none\" stroke-width=\"1.000000\" stroke-dasharray=\"\" stroke-dashoffset=\"1.000000\" fill=\"white\" fill-rule=\"evenodd\" fill-opacity=\"1.000000\"/>\n                <use clip-path=\"url(#circle)\" xlinkHref=\"#line\" />\n            </svg>\n        </Link>\n    );\n}\n\nexport { TwitterButton, FacebookButton, MeweButton, LineButton };\n","import React from 'react';\nimport { useIntl } from 'react-intl';\nimport { TwitterButton, FacebookButton, MeweButton, LineButton } from \"./ShareButtons\";\n\nexport default function Footer() {\n    const intl = useIntl();\n    return (\n        <footer>\n            <div className={\"d-flex justify-content-center my-5\"}>\n                <TwitterButton />\n                <FacebookButton />\n                <MeweButton />\n                <LineButton />\n            </div>\n            <p>{intl.formatMessage({ id: \"footer.copyright\" })}</p>\n        </footer>\n    );\n}\n","export const GA_MEASUREMENT_ID = 'G-FJN2KR1FWT';\r\n\r\nexport const pageview = (url: URL | string) => {\r\n    window.gtag(\"config\", GA_MEASUREMENT_ID, {\r\n        page_path: url\r\n    });\r\n};\r\n\r\ntype GTagEvent = {\r\n    action: string;\r\n    category: string;\r\n    label: string;\r\n    value: number;\r\n};\r\n\r\nexport const event = ({action, category, label, value}: GTagEvent) => {\r\n    window.gtag(\"event\", action, {\r\n        event_category: category,\r\n        event_label: label,\r\n        value: value\r\n    });\r\n};","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { IntlProvider } from 'react-intl';\nimport useLocale from './Locale';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Status from './Status';\nimport Footer from './Footer';\nimport {pageview} from './gtag'\n\n\nfunction App() {\n    const [locale, setLocale, localeList, localeMessage] = useLocale();\n    return (\n        <IntlProvider\n            defaultLocale={localeList[0].code}\n            key={locale}\n            locale={locale}\n            messages={localeMessage}\n        >\n            <React.Fragment>\n                <Header locale={locale} setLocale={setLocale} localeList={localeList} />\n                <Router basename={process.env.PUBLIC_URL}>\n                    <div>\n                        <Switch>\n                            <Route exact path=\"/\">\n                                {pageview('/')}\n                                <Home/>\n                            </Route>\n                            <Route path=\"/status\">\n                                {pageview('/status')}\n                                <Status/>\n                            </Route>\n                        </Switch>\n                    </div>\n                </Router>\n                <Footer/>\n            </React.Fragment>\n        </IntlProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}